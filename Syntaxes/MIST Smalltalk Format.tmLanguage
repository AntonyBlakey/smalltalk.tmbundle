<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>mist</string>
	</array>
	<key>foldingStartMarker</key>
	<string>/\*\*|\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\*/|^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~M</string>
	<key>name</key>
	<string>MIST Smalltalk Format</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x:
			    	(define \s+ project)
			)</string>
			<key>name</key>
			<string>meta.smalltalk.classdef</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x:
			    	(define \s+ configuration)
			)</string>
			<key>name</key>
			<string>meta.smalltalk.classdef</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk.noise</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.type</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk.noise</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x:
				(define)
				\s+
				(class:|namespace:)
				\s+
			    	(\#\{)
				((?:[a-zA-Z_][a-zA-Z0-9_]*)(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*) # Subclass
				(\})
			    	\s+
				(is:)
			)</string>
			<key>name</key>
			<string>meta.smalltalk.classdef</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk.noise</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.type</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk.noise</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk.noise</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>entity.name.type</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk.noise</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x:
				(define)
				\s+
				(class:)
				\s+
			    	(\#\{)
				((?:[a-zA-Z_][a-zA-Z0-9_]*)(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)
				(\})
			    	\s+
				(superclass:)
				\s+
			    	(\#\{)
				((?:[a-zA-Z_][a-zA-Z0-9_]*)(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)
				(\})
				\s+
				(is:)
			)</string>
			<key>name</key>
			<string>meta.smalltalk.classdef</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\[ (:def) \|</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other</string>
				</dict>
			</dict>
			<key>end</key>
			<string>]</string>
			<key>name</key>
			<string>meta.smalltalk.classbody</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#methoddef</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#methoddefx</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#classdefkeyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#containerComment</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(super|self|thisContext)\b</string>
			<key>name</key>
			<string>keyword.language.smalltalk</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\:\=|\^)</string>
			<key>name</key>
			<string>keyword.language.smalltalk</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(nil|true|false)\b</string>
			<key>name</key>
			<string>constant.language.smalltalk</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>comment.block.smalltalk</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.smalltalk</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.string.escape</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>name</key>
			<string>meta.block.smalltalk</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deferredblock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#param</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#langvar</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
			</array>
		</dict>
		<key>classdefkeyword</key>
		<dict>
			<key>match</key>
			<string>[a-zA-Z_][a-zA-Z0-9_]*:</string>
			<key>name</key>
			<string>keyword.language.classdef.smalltalk</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>comment.block.smalltalk</string>
		</dict>
		<key>constant</key>
		<dict>
			<key>match</key>
			<string>\b(nil|true|false)\b</string>
			<key>name</key>
			<string>constant.language.smalltalk</string>
		</dict>
		<key>containerComment</key>
		<dict>
			<key>begin</key>
			<string>@@ '(\s.*)</string>
			<key>contentName</key>
			<string>comment.block.container.smalltalk</string>
			<key>end</key>
			<string>(\s.*)';</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.string.escape</string>
				</dict>
			</array>
		</dict>
		<key>deferredblock</key>
		<dict>
			<key>begin</key>
			<string>(:\[)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.smalltalk.deferredblock</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>name</key>
			<string>meta.deferredblock.smalltalk</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deferredblock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#param</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#langvar</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
			</array>
		</dict>
		<key>keyword</key>
		<dict>
			<key>match</key>
			<string>[a-zA-Z_][a-zA-Z0-9_]*:</string>
			<key>name</key>
			<string>keyword.language.smalltalk</string>
		</dict>
		<key>langvar</key>
		<dict>
			<key>match</key>
			<string>\b(super|self|thisContext)\b</string>
			<key>name</key>
			<string>variable.language.smalltalk</string>
		</dict>
		<key>methoddef</key>
		<dict>
			<key>begin</key>
			<string>(method:|class_method:)\s*(:\[)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.classdef.smalltalk</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.language.classdef.smalltalk</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.classdef.smalltalk</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.methoddef.smalltalk</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#methoddefbody</string>
				</dict>
			</array>
		</dict>
		<key>methoddefbody</key>
		<dict>
			<key>begin</key>
			<string>(?x:
						^\s*
						(
							(
								[a-zA-Z_][a-zA-Z0-9_]*
							)
							|
							(
								(
									[a-zA-Z_][a-zA-Z0-9_]*:
									\s+
									[a-zA-Z_][a-zA-Z0-9_]*
									\s*
								)+
							)
						)
						\s*$
					)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.methoddefselector.smalltalk</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(])</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.language.classdef.smalltalk</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.methoddefbody.smalltalk</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#param</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#langvar</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
			</array>
		</dict>
		<key>methoddefx</key>
		<dict>
			<key>begin</key>
			<string>(method:|class_method:)\s*(:\[)\s*(.+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.classdef.smalltalk</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.language.classdef.smalltalk</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.language.methoddefselector.smalltalk</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(];)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.classdef.smalltalk</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.methoddefx.smalltalk</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#param</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#langvar</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
			</array>
		</dict>
		<key>param</key>
		<dict>
			<key>match</key>
			<string>:[a-zA-Z_][a-zA-Z0-9_]*</string>
			<key>name</key>
			<string>variable.other</string>
		</dict>
		<key>string</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.smalltalk</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.string.escape</string>
				</dict>
			</array>
		</dict>
		<key>symbol</key>
		<dict>
			<key>match</key>
			<string>#[a-zA-Z_][a-zA-Z0-9_:]*</string>
			<key>name</key>
			<string>constant.other</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.smalltalk.mist</string>
	<key>uuid</key>
	<string>09A69C90-642D-49B4-A7F8-6DC03CC25732</string>
</dict>
</plist>
